---
title: Rate Limit Information Returned by the Cloud Controller API
owner: CAPI
---

See [here](./setting-rate-limit-cloud-api.html) for information how to configure rate limits.

## <a id="Rate Limit Responses: General"></a> Rate Limit Responses: General

The Cloud Controller API includes rate limit information in the HTTP header. Each header includes the following:

```
X-RateLimit-Limit: 60
X-RateLimit-Remaining: 56
X-RateLimit-Reset: 1372700873
```

Use this table to understand the rate limit header.

<table>
<th>Field Value</th>
<th>Description</th>
 <tr>
 	<td>X-RateLimit-Limit</td>
 	<td>The maximum number of attempts per <a href="../concepts/architecture/uaa.html">User Account and Authentication (UAA)</a> user, if a user is authenticated. The maximum number of attempts per IP address, if no user is authenticated.</td>
 </tr>
 <tr>
 	<td>X-RateLimit-Remaining</td>
	<td>The estimated number of attempts remaining.</td>
 </tr>
 <tr>
 	<td>X-RateLimit-Reset</td>
 	<td>The time when the rate limit counter resets, in UTC <a href="https://en.wikipedia.org/wiki/Unix_time">epoch seconds</a>.</td>
 </tr>
</table>

Requests are counted separately in each Cloud Controller instance and each produces an estimate for the total number of remaining requests.
The estimate is based on the fraction remaining on the Cloud Controller instance, rounded down to the nearest 10%, multiplied by the global maximum number of attempts.
This might result in inconsistent values for the `X-RateLimit-Remaining` header when running multiple instances of Cloud Controller API, such as some requests still being allowed when the header value is `0`.

When requests exceed the maximum rate limit value, the Cloud Controller API returns a `429: Too Many Requests` error code.

## <a id="Rate Limit Responses: Service Brokers"></a> Rate Limit Responses: Service Brokers

The optional limit on the number of concurrent service broker requests will, when breached, result in a response that includes a Retry-After header. This gives an _absolute_ time suggesting when the client should attempt to make their request again. This is the current time plus a random number of seconds between 0.5x and 1.5x of the configured value for `cc.broker_client_timeout_seconds`.

If this property is not set, it defaults to 60 seconds, and the header will therefore suggest a random retry time between 30 and 90 seconds in the future.
